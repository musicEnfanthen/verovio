name: Verovio CI (build C++)
# Build c++ code on different os in parallel.
# Adapted from https://github.com/DaanDeMeyer/reproc/blob/master/.github/workflows/main.yml .

on:
  # Trigger the workflow on push,
  # but only for the travis-test branch
  push:
    branches:
      - travis-test

jobs:
  build_cpp:

    name: Build ${{ matrix.config.os }}-${{ matrix.config.compiler }}-${{ matrix.config.version }}
    # This job runs on all the os specified in strategy.matrix.os
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-20.04
            compiler: gcc
            version: "6"

          - os: ubuntu-20.04
            compiler: gcc
            version: "9"

          - os: ubuntu-20.04
            compiler: gcc
            version: "10"

          - os: ubuntu-20.04
            compiler: clang
            version: "6.0"

          - os: ubuntu-20.04
            compiler: clang
            version: "9"

          - os: ubuntu-20.04
            compiler: clang
            version: "10"

#          - os: windows-latest
#            compiler: cl
#            version: "default"
#
#          - os: windows-latest
#            compiler: clang-cl
#            version: "latest"
#
#          - os: windows-latest
#            compiler: clang
#            version: "latest"
#
#          - os: windows-latest
#            compiler: gcc
#            version: "latest"

          - os: macos-latest
            compiler: xcode
            version: "default"

          - os: macos-latest
            compiler: gcc
            version: "latest"

    steps:
      - name: Checkout main repo
        id: checkout_main_repo
        uses: actions/checkout@v2

      - name: Install Ubuntu (${{ matrix.config.compiler }}-${{ matrix.config.version }})
        if: matrix.config.os == 'ubuntu'
        run: |
          # TODO: Remove once https://github.com/actions/virtual-environments/issues/1536 is resolved.
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key 2>/dev/null | sudo apt-key add -
          sudo add-apt-repository 'deb http://apt.llvm.org/focal llvm-toolchain-focal-10 main' -y
          sudo apt-get update -q
          sudo apt-get install -y --no-install-recommends ninja-build clang-tidy-10
          sudo ln -s /usr/bin/clang-tidy-10 /usr/local/bin/clang-tidy
          if [ "${{ matrix.config.compiler }}" = "gcc" ]; then
            sudo apt-get install -y --no-install-recommends g++-${{ matrix.config.version }}
            echo CC=gcc-${{ matrix.config.version }} >> $GITHUB_ENV
            echo CXX=g++-${{ matrix.config.version }} >> $GITHUB_ENV
          else
            sudo apt-get install -y --no-install-recommends clang-${{ matrix.config.version }}
            echo CC=clang-${{ matrix.config.version }} >> $GITHUB_ENV
            echo CXX=clang++-${{ matrix.config.version }} >> $GITHUB_ENV
          fi

      - name: Install macOS (${{ matrix.config.compiler }}-${{ matrix.config.version }})
        if: matrix.config.os == 'macos'
        run: |
          brew install ninja llvm
          sudo ln -s /usr/local/opt/llvm/bin/clang-tidy /usr/local/bin/clang-tidy
          if [ "${{ matrix.config.compiler }}" = "gcc" ]; then
            echo CC=gcc >> $GITHUB_ENV
            echo CXX=g++ >> $GITHUB_ENV
          else
            echo CC=clang >> $GITHUB_ENV
            echo CXX=clang++ >> $GITHUB_ENV
          fi

      - name: Install Windows (${{ matrix.config.compiler }}-${{ matrix.config.version }})
        if: matrix.config.os == 'windows'
        run: |
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
          scoop install ninja llvm --global
          if ("${{ matrix.config.compiler }}" -eq "gcc") {
            echo "::set-env name=CC::gcc"
            echo "::set-env name=CXX::g++"
          } elseif ("${{ matrix.config.compiler }}" -eq "clang") {
            echo "::set-env name=CC::clang"
            echo "::set-env name=CXX::clang++"
          } else {
            echo "::set-env name=CC::${{ matrix.config.compiler }}"
            echo "::set-env name=CXX::${{ matrix.config.compiler }}"
          }
          # Make all PATH additions made by scoop and ourselves global.
          echo "::set-env name=PATH::$env:PATH"

      - name: Run make
        id: make
        run: |
          cd $GITHUB_WORKSPACE/tools
          cmake ../cmake
          make -j 8

