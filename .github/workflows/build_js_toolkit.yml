name: Verovio CI (build JS toolkit)

on:
  # Trigger the workflow on push,
  # but only for the travis-test branch
  push:
    branches:
      - travis-test   # TODO: switch back to "develop"

# globals
env:
  # repos
  VEROVIO_REPOSITORY: musicenfanthen/verovio  # TODO: switch back to "rism-ch/verovio"

  # branches
  BUILD_BRANCH: travis-test   # TODO: switch back to "develop"
  GH_PAGES_BRANCH: gh-pages

  # directories
  GH_PAGES_FOLDER: gh-pages
  TEMP_FOLDER: temp

  # build artifacts
  CLI_BUILD: cli-build
  TOOLKIT_BUILD: toolkit-build

  # emscripten
  EMSCRIPTEN_VERSION: latest
  EMSCRIPTEN_CACHE_FOLDER: 'emsdk-cache'


jobs:
  # Precache the emscripten installation and make-build for the JS Toolkit Build
  build_cli:
    name: Build cli
    # This job runs on linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repo
        uses: actions/checkout@v2

      - name: Create temp dir
        run: |
          cd $GITHUB_WORKSPACE
          mkdir -p ${{ env.TEMP_FOLDER }}/

      - name: Make build
        run: |
          cd $GITHUB_WORKSPACE/tools
          cmake ../cmake
          make -j 8

      - name: Update documentation of the option list
        run: |
          cd $GITHUB_WORKSPACE/tools
          ./verovio -h > $GITHUB_WORKSPACE/${{ env.TEMP_FOLDER }}/cli.txt
          cd $GITHUB_WORKSPACE/${{ env.TEMP_FOLDER }}/
          echo "Show content"
          pwd
          ls -alh

      - name: Upload cli artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.CLI_BUILD }}
          path: ${{ github.workspace }}/${{ env.TEMP_FOLDER }}/cli.txt


  build_js:
    name: Build JS toolkit
    # This job runs on linux
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toolkit:
          - target: nohumdrum
            message: "Building toolkit without humdrum"
            options: "-c -H -M"
            filepath: "verovio-toolkit.js*"
          - target: light
            message: "Building toolkit without humdrum as light version"
            options: "-c -H -l -M"
            filepath: "verovio-toolkit-light.js*"
         # - target: wasm
         #   message: "Building toolkit without humdrum as wasm"
         #   options: "-c -H -w -M"
         #   filepath: "verovio*wasm*"
          - target: default
            message: "Building default toolkit (with humdrum)"
            options: "-c -M"
            filepath: "*-hum.js*"

    steps:
      - name: Checkout main repo
        uses: actions/checkout@v2

      - name: Cache emsdk artifacts
        id: cache-emsdk
        uses: actions/cache@v2
        with:
          # path for cache
          path: ${{ env.EMSCRIPTEN_CACHE_FOLDER }}
          # key for cache
          key: ${{ runner.os }}-emsdk-${{ env.EMSCRIPTEN_VERSION }}

      - name: Setup emsdk (use cache if found, create otherwise)
        uses: mymindstorm/setup-emsdk@v7
        with:
          version: ${{ env.EMSCRIPTEN_VERSION }}
          actions-cache-folder: ${{ env.EMSCRIPTEN_CACHE_FOLDER }}

      #TODO: remove step
      - name: Verify emscripten build
        run: emcc -v

      - name: Create temp dir
        run: |
          cd $GITHUB_WORKSPACE
          mkdir -p ${{ env.TEMP_FOLDER }}/

      - name: Build Toolkit (${{ matrix.toolkit.target }}) with options ${{ matrix.toolkit.options }}
        run: |
          cd $GITHUB_WORKSPACE/emscripten
          echo "${{ matrix.toolkit.message }}"
          ./buildToolkit ${{ matrix.toolkit.options }}
          cp build/${{ matrix.toolkit.filepath }} $GITHUB_WORKSPACE/${{ env.TEMP_FOLDER }}/

          cd $GITHUB_WORKSPACE/${{ env.TEMP_FOLDER }}/
          echo "Show content"
          pwd
          ls -alh

      - name: Upload js build artifact (${{ matrix.toolkit.target }})
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TOOLKIT_BUILD }}
          path: ${{ github.workspace }}/${{ env.TEMP_FOLDER }}/${{ matrix.toolkit.filepath }}

      - name: List all files
        if: always()
        run: |
          cd $GITHUB_WORKSPACE/${{ env.TEMP_FOLDER }}/
          pwd
          ls -al
          git status

  deploy:
    name: Deploy
    # This job runs on linux
    runs-on: ubuntu-latest
    needs: [build_cli, build_js]
    steps:
      - name: Checkout GH_PAGES_BRANCH into GGH_PAGES_FOLDER
        uses: actions/checkout@v2
        with:
          ref: ${{ env.GH_PAGES_BRANCH }}
          path: ${{ env.GH_PAGES_FOLDER }}

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        #if no name specified, all artifacts are downloaded (here: [cli-build, toolkit-build])
        with:
          path: artifacts

      - name: Copy artifacts to gh-pages
        run: |
          cp artifacts/${{ env.CLI_BUILD }}/cli.txt ${{ env.GH_PAGES_FOLDER }}/_includes/
          cp artifacts/${{ env.TOOLKIT_BUILD }}/* ${{ env.GH_PAGES_FOLDER }}/javascript/develop/

      - name: Verify
        run: |
          ls -R

      - name: Git status
        run: |
          cd ${{ env.GH_PAGES_FOLDER }}
          git status
