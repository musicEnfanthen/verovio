name: Python Wheel Build

on:
  workflow_dispatch: # manual trigger
  push:
    # Trigger the workflow on push,
    # but only for the branches specified
    branches:
      # Push events on develop branch
      - ci-test

jobs:
  build_wheels:
    name: Build wheels (${{ matrix.python-version }}, ${{ matrix.platform_id }})
    runs-on: ${{ matrix.os }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      # Build the wheels for Linux, Windows and macOS for Python 3.6 and newer
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        python-version: [ 39 ] # [36, 37, 38, 39]
        bitness: [ 32, 64 ]
        include:
          # Run 32 and 64 bit version in parallel for Linux and Windows
          - os: windows-latest
            bitness: 64
            platform_id: win_amd64
          - os: windows-latest
            bitness: 32
            platform_id: win32
          - os: ubuntu-latest
            bitness: 64
            platform_id: manylinux_x86_64
          - os: ubuntu-latest
            bitness: 32
            platform_id: manylinux_i686
          - os: macos-latest
            bitness: 64
            platform_id: macosx_x86_64
        exclude:
          - os: macos-latest
            bitness: 32
        
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Verify Python version
        run: python -c "import sys; print(sys.version)"
      
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install cibuildwheel==1.7.1 twine

      #===============================================#
      # SET UP DATA RESOURCES
      #===============================================#
      - name: Move python bindgins to top level
        run: mv bindings/python/setup.py .

      - name: Create __init__.py in data folder
        working-directory: data
        run: touch __init__.py

      - name: Create MANIFEST.in with recursively included data
        run: |
          touch MANIFEST.in
          echo "recursive-include data *" > MANIFEST.in

      - name: Verify
        run: ls -R

      #===============================================#
      # WHEELS
      #===============================================#

      - name: Get Build Identifier
        run: python -m cibuildwheel . --print-build-identifiers
    
      - name: Build wheels
        env:
          CIBW_BUILD: cp${{ matrix.python-version }}-${{ matrix.platform_id }}
          CIBW_BEFORE_ALL_LINUX: yum install -y swig
          CIBW_BEFORE_ALL_MACOS: brew install swig
          CIBW_BEFORE_ALL_WINDOWS: choco install swig -f -y
          CIBW_BEFORE_BUILD: swig -version
        run: python -m cibuildwheel . --output-dir wheelhouse
 
      - name: "List result"
        run: ls -l ./wheelhouse
      - name: "Check with Twine"
        run: python -m twine check ./wheelhouse/*
 
      - uses: actions/upload-artifact@v2
        with:
          name: cibuildwheel-${{ runner.os }}-python-${{ matrix.python-version }}
          path: ./wheelhouse/*.whl
