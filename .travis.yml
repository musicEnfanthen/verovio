branches:
  only:
    - travis-test

sudo: false
os: linux
dist: bionic
language: cpp

git:
  depth:
    3

env:
  global:
    - BUILD_BRANCH: travis-test   # TODO: switch back to "develop"
    - COMMIT_AUTHOR_EMAIL: "$(git log -1 --pretty=format:'%aE')"  # TODO: switch author email back to: "lxpugin@gmail.com" if necessary
    # repos
    - EMSCRIPTEN_REPOSITORY: "https://github.com/emscripten-core/emsdk.git"
    - VEROVIO_REPOSITORY: "https://${GH_TOKEN}@github.com/musicEnfanthen/verovio"  # TODO: switch back to "https://${GH_TOKEN}@github.com/rism-ch/verovio"
    # directories
    - CURRENT_PATH: "$(pwd)"
    - EMSCRIPTEN_DIRECTORY: "emsdk"
    - GH_PAGES_DIRECTORY: "gh-pages"
    - OUTPUT_DIRECTORY: "${CURRENT_PATH}/${GH_PAGES_DIRECTORY}"

# cache emscripten installation, tools build and output directory to be used throughout different stages
cache:
  directories:
    - $EMSCRIPTEN_DIRECTORY
    - $GH_PAGES_DIRECTORY
    - tools

# define order of stages
# conditions for any stage can be included here
stages:
  #- build-c++
  - precache
  - build-toolkit
  - deploy

jobs:
  include:
    #################
    # BUILD-C++ STAGE
    #################
    # tests builds on osx and on linux with g++
   # - stage: build-c++
   #  name: osx-xcode
   #   os: osx
   #   osx_image: xcode11.1
   #   script:
   #     - cd tools
   #     - cmake .
   #     - make
   # - name: linux-g++-5
   #   os: linux
   #   script:
   #     - cd tools
   #     - cmake .
   #     - make

    ################
    # PRECACHE STAGE
    ################
    # precaches the emscripten installation, gh-pages, and make-build
    # has to come before "build-toolkit" stage
    - stage: precache
      name: "Precache emscripten installation, make build and gh-pages"
      os: linux
      script:
        - ./ci_precache.sh
        - ./ci_deploy-toolkit.sh

    #####################
    # BUILD-TOOLKIT STAGE
    #####################
    # builds toolkit with different options in sequence
    # all "substages" have to use a different stage id "build-toolkit-xx"
    - stage: build-toolkit
      name: "no humdrum"
      os: linux
      script:
        - ./ci_build-toolkit.sh nohumdrum
        - ./ci_deploy-toolkit.sh
    - name: "no humdrum light"
      os: linux
      script:
        - ./ci_build-toolkit.sh light
        - ./ci_deploy-toolkit.sh
    - name: "no humdrum wasm"
      os: linux
      script:
        - ./ci_build-toolkit.sh wasm
        - ./ci_deploy-toolkit.sh
    - name: "default (with humdrum)"
      os: linux
      script:
        - travis_wait 30 ./ci_build-toolkit.sh default
        - ./ci_deploy-toolkit.sh

    ##############
    # DEPLOY stage
    ##############
    # deploys toolkit and doxygen builds in parallel
    - stage: deploy
    #  name: toolkit
    #+  os: linux
    # skip_cleanup: true
    #  script:
    #    - ./ci_deploy-toolkit.sh
      name: doxygen
      os: linux
      addons:
        apt:
          packages:
            - doxygen
      script:
        - ./ci_deploy-doxygen.sh
